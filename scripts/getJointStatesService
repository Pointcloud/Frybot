#!/usr/bin/env python

import time
import rospy # pylint: disable=import-error
from sensor_msgs.msg import JointState # pylint: disable=import-error
from frystation.srv import GetJointPose # pylint: disable=import-error

global MANIPULATOR_JOINT_STATES
MANIPULATOR_JOINT_STATES = JointState()
MANIPULATOR_JOINT_STATES.name =  ["joint1", "joint2", "joint3", "joint4", "joint5", "joint6"]
MANIPULATOR_JOINT_STATES.position =  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

def joint_states_topic_callback(data):
	print("starting the joint state topic callback")
	global MANIPULATOR_JOINT_STATES
	MANIPULATOR_JOINT_STATES = JointState()
	MANIPULATOR_JOINT_STATES.name =  data.name
	MANIPULATOR_JOINT_STATES.position =  data.position


def joint_state_service_callback(request):
	response = GetJointPose()
	response.joint_name = ["joint1", "joint2", "joint3", "joint4", "joint5", "joint6"]
	response.joint_value = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
	return(response.joint_name,response.joint_value)

def manipulator_joint_position_service():
	rospy.init_node('joint_position_server')
	s = rospy.Service('get_joint_values', GetJointPose, joint_state_service_callback)
	print("Ready to recieve manipulator joint state requests")
	rospy.spin()

if __name__ == "__main__":

	#setup a subscriber to get joint states, allow 1 second for subscriber to register
	rospy.Subscriber("/open_manipulator_pro/joint_states", JointState, joint_states_topic_callback)
	time.sleep(2) 
	manipulator_joint_position_service()