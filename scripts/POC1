#!/usr/bin/env python

import rospy # pylint: disable=import-error
import time
from open_manipulator_msgs.srv import SetJointPosition # pylint: disable=import-error
from open_manipulator_msgs.srv import SetActuatorState # pylint: disable=import-error
from open_manipulator_msgs.msg import JointPosition # pylint: disable=import-error

######################### MANIPULATOR POSITIONS ###########################
GRIPPER_OPEN = 700
GRIPPER_CLOSED = 0

MANIPULATOR_HOME = [0.0,-0.785,0.3926,0.0, 0.3926, 0.0]
DOOR_OPEN_APPROACH = [-1.400, -1.504, 2.500, 0.026, 2.946, -1.349]
DOOR_OPEN_POSITION_1 = [-1.400, -1.504, 2.720, 0.026, 2.946, -1.349]
DOOR_OPEN_POSITION_2 = [1.0, -1.504, 2.680, 0.026, 2.946, -1.0]
DOOR_OPEN_POSITION_3 = [-0.5, -1.6, 2.52, 0.026, 2.946, -1.0]
DOOR_OPEN_POSITION_4 = [-0.748, -0.222, 2.520, 0.026, 2.378, 0.477]
DOOR_OPEN_POSITION_5 = [0.150, 0.431, 1.720, 0.026, 2.000, 1.381]

CUP_GRIPPER_GRASP = [0.750]
CUP_APPROACH = [0.417, 2.927, 1.276, -2.625, 3.004, -0.138]
CUP_GRASP = [0.003, 3.077, 1.276, -3.062, 3.004, -0.138]
CUP_APPROACH_again = [0.417, 2.927, 1.276, -2.625, 3.004, -0.138]
CUP_FRYER_APPROACH_1 = [1.853, -0.529, 2.637, -3.062, 3.004, -2.947]
CUP_FRYER_APPROACH_2 = [1.252, 0.039, 0.726, -3.062, 3.004, -2.947]
CUP_FRYER_APPROACH_3 = [-1.926, 0.866, -0.328, -3.062, -2.504, -2.152]
CUP_FRYER_DUMP = [-1.926, 0.866, -0.328, -3.062, -2.041, 2.536]

CUP_STAND_APPROACH_1 = [0.527, -0.484, 3.092, -0.014, -1.182, 0.000]
CUP_STAND_APPROACH_2 = [-0.252, -0.484, 3.092, -0.014, -1.182, 0.000]
CUP_STAND_POSITION = [-0.262, 0.488, 2.116, -0.014, -1.182, 0.000]

DOOR_CLOSE_1 = [0.198, 1.179, 0.396, 0.003, 0.778, 0.003]
DOOR_CLOSE_2 = [0.198, 1.079, 0.396, 0.003, 1.559, 0.003]
DOOR_CLOSE_3 = [0.033, 0.708, 0.622, 0.003, 2.905, -1.796]
DOOR_CLOSE_4 = [-0.666, -0.680, 2.171, 0.003, 2.962, -3.050]
DOOR_CLOSE_5 = [-0.171, -0.680, 2.171, 0.003, 2.962, -3.050]

FRYER_BASKET_GRIP = [0.030]
FRYER_BASKET_1 = [0.754, 0.307, -0.598, -2.840, 3.042, 1.352]
FRYER_BASKET_2 = [0.654, -0.109, 1.114, -2.778, 2.992, 2.647]
FRYER_BASKET_3 = [0.654, 0.390, -0.728, -2.928, 2.992, 1.317]
FRYER_BASKET_4 = [0.654, -1.395, 1.061, -2.928, 2.992, 1.417]
FRYER_BASKET_5 = [0.654, -1.895, 2.516, -2.928, 2.992, -1.140]

FRY_CHUTE_1 = [-2.470, -1.409, 2.735, -0.002, -0.165, 0.069]
FRY_CHUTE_2 = [-2.470, -1.409, 3.140, -0.002, -0.165, 0.069]
FRY_CHUTE_3 = []
FRY_CHUTE_4 = []

FRY_CHUTE_DUMP_1 = [-2.467, -1.466, 2.800, 0.000, 0.082, 0.004]
FRY_CHUTE_DUMP_2 = [-2.467, -1.466, 3.042, 0.000, 0.082, 0.004]
FRY_CHUTE_DUMP_3 = [-2.617, -0.879, 0.255, 0.000, 2.034, -0.080]
FRY_CHUTE_DUMP_4 = [1.069, -0.843, 0.424, 0.000, 1.667, -0.080]
FRY_CHUTE_DUMP_5 = [0.742, -1.464, 2.592, 0.000, 0.326, -0.080]
FRY_CHUTE_DUMP_6 = [-0.356, -0.888, 1.383, 1.410, 0.750, 0.983]


##############################################################################
def manipulator_enable(enabled):
	print("starting manipulator_enable")
	rospy.wait_for_service('/open_manipulator_pro/set_actuator_state')
	try:
		set_actuator_state = enabled
		enable_manipulator  = rospy.ServiceProxy('/open_manipulator_pro/set_actuator_state', SetActuatorState)
		_response_enable_manipulator = enable_manipulator(set_actuator_state)
	except (rospy.ServiceException, rospy.ROSException) as e:
		rospy.logerr("Service call failed: %s" % (e,))
		print("manipulator_enable Service call failed")
		exit(-1)
	return("manipulator enable update complete")

def manipulator_move(joints, speed):
	print("starting manipulator_move")
	rospy.wait_for_service('/open_manipulator_pro/goal_joint_space_path')
	try:
		planning_group = "manipulatorGroup"
		joint_name = ["joint1", "joint2", "joint3", "joint4", "joint5", "joint6"]
		joint_position = [joints[0], joints[1], joints[2], joints[3], joints[4], joints[5]]
		print(joint_position)
		msgPosition = JointPosition()
		msgPosition.joint_name = joint_name 
		msgPosition.position = joint_position
		path_time = speed
		move_joint  = rospy.ServiceProxy('/open_manipulator_pro/goal_joint_space_path', SetJointPosition)
		_responseSetJointPose = move_joint(planning_group, msgPosition, path_time)
	except (rospy.ServiceException, rospy.ROSException) as e:
		rospy.logerr("Service call failed: %s" % (e,))
		print("Call to /open_manipulator_pro/goal_joint_space_path failed")
		exit(-1)
	return("manipulator joint update complete")

def setGripperPosition(gripperPosition):
	print("starting set gripper position")
	rospy.wait_for_service('/open_manipulator_pro/goal_tool_control')
	try:
		planning_group = "gripperGroup"
		msgGripperPosition = JointPosition()
		joint_name = ["gripper"]
		joint_position = [float(gripperPosition/649.69)]
		msgGripperPosition.joint_name = joint_name 
		msgGripperPosition.position = joint_position
		path_time = 0.5
		move_gripper  = rospy.ServiceProxy('/open_manipulator_pro/goal_tool_control', SetJointPosition)
		_responseSetGripperPose = move_gripper(planning_group, msgGripperPosition, path_time)
	except (rospy.ServiceException, rospy.ROSException) as e:
		rospy.logerr("Service call failed: %s" % (e,))
		print("gripper position Service call failed")
		exit(-1)
	return("gripper position update complete")

def make_Fries():
	print("starting make_Fries")
	################################################################
	######################### Make Fries ###########################
	################################################################
	
	#################### Open Door ####################
	
	#enable joints
	manipulator_enable(True)
	time.sleep(1) 

	#this returns an error
	manipulator_move(MANIPULATOR_HOME,1)
	time.sleep(1) 

	#open gripper
	setGripperPosition(GRIPPER_OPEN)
	time.sleep(1) 

	#move the manipulator to door approach position
	manipulator_move(DOOR_OPEN_APPROACH,5)
	time.sleep(5) 

	#move the manipulator to the door open position 1
	manipulator_move(DOOR_OPEN_POSITION_1,5)
	time.sleep(5) 

	#move the manipulator to the door open position 2
	manipulator_move(DOOR_OPEN_POSITION_2,5)
	time.sleep(5) 

	#move the manipulator to the door open position 3
	manipulator_move(DOOR_OPEN_POSITION_3,5)
	time.sleep(5) 

	#move the manipulator to the door open position 3
	manipulator_move(DOOR_OPEN_POSITION_4,5)
	time.sleep(5) 

	#move the manipulator to the door open position 3
	manipulator_move(DOOR_OPEN_POSITION_5,5)
	time.sleep(5) 

	#disable joints
	#manipulator_enable(False)
	#time.sleep(1) 

if __name__=='__main__':
	try:
		
		#create the ROS node for the application	
		rospy.init_node('frymaker')

		#run the main application
		make_Fries()
		
	except rospy.ROSInterruptException:
		pass


