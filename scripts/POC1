#!/usr/bin/env python
#This is the proof of concept applicaton with the instructions to make fries

import rospy # pylint: disable=import-error
import time
from open_manipulator_msgs.srv import SetJointPosition # pylint: disable=import-error
from open_manipulator_msgs.msg import JointPosition # pylint: disable=import-error

def manipulator_move(joints, speed):
	print("starting manipulator_move")
	rospy.wait_for_service('/open_manipulator_pro/goal_joint_space_path')
	try:
		planning_group = "manipulatorGroup"
		joint_name = ["joint1", "joint2", "joint3", "joint4", "joint5", "joint6"]
		joint_position = [joints[0], joints[1], joints[2], joints[3], joints[4], joints[5]]
		print(joint_position)
		msgPosition = JointPosition()
		msgPosition.joint_name = joint_name 
		msgPosition.position = joint_position
		path_time = speed
		move_joint  = rospy.ServiceProxy('/open_manipulator_pro/goal_joint_space_path', SetJointPosition)
		_responseSetJointPose = move_joint(planning_group, msgPosition, path_time)
	except (rospy.ServiceException, rospy.ROSException) as e:
		rospy.logerr("Service call failed: %s" % (e,))
		print("Call to /open_manipulator_pro/goal_joint_space_path failed")
	exit(-1)
	return("manipulator joint update complete")

def make_Fries():
	print("starting make_Fries")
	################################################################
	######################### Make Frys ############################
	################################################################

	#move the manipulator to the home position 
	manipulator_move([0.0, -0.785, 0.39269, 0.0, 0.39269, 0.0],3)
	print("move 1 complete")

	#move the last joint
	manipulator_move([0.0, -0.785, 0.39269, 0.0, 0.39269, 1.0],1)
	print("move 2 complete")

	#move the manipulator to the home position 
	manipulator_move([0.0, -0.785, 0.39269, 0.0, 0.39269, 0.0],1)
	print("move 3 complete")

	#move the manipulator to the cup approach position 
	#manipulator_move([3.071765899658203, 1.483525276184082, 2.75760793685913, 0.0, -2.61798357963562, 0.8191601431369782],4)
	#time.sleep(1) 

	#move the manipulator to the cup position 
	#manipulator_move([3.071765899658203, 1.8151339292526245, 2.0594775676727295, 0.0, -2.4085440635681152, 0.017437780275940895],3)

	#gripper position for cup grasp is .970947260260582
	time.sleep(1) 

if __name__=='__main__':
	try:
		
		#create the ROS node for the application	
		rospy.init_node('frymaker')

		#run the main application
		make_Fries()
		
	except rospy.ROSInterruptException:
		pass


